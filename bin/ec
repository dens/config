#!/bin/bash

export EMACS_SERVER_NAME=${EMACS_SERVER_NAME:-"server"}
export EMACS_SERVER_PIDFILE=$HOME/.emacs-${EMACS_SERVER_NAME}.pid

if [ "$1" = "-kill" ]; then
    kill $(cat $EMACS_SERVER_PIDFILE)
    exit
fi

start_server()
{
    if [ ! -f "$EMACS_SERVER_PIDFILE" ]; then
        startscript=$(mktemp --tmpdir ${EMACS_SERVER_NAME}XXXX)
        (
            cat <<EOF > $startscript
(setq server-name "$EMACS_SERVER_NAME")
(server-start)
(with-temp-buffer
  (insert (format "%i\n" (emacs-pid)))
  (write-region (point-min) (point-max) "$EMACS_SERVER_PIDFILE"))
EOF
            pushd ~ >/dev/null
            screen -D -m emacs $EMACS_SERVER_ARGS -l $startscript -nw &
            popd >/dev/null
            pid=$!
            wait $pid
            rm $EMACS_SERVER_PIDFILE
        ) &

        while [ ! -f "$EMACS_SERVER_PIDFILE" ]; do
            sleep 1
        done

        rm $startscript
    fi
}

if [ "$1" = "-srv" ]; then
    start_server &
    exit
else
    start_server
fi

background=""
if [ "$1" = "-bg" ]; then
    shift
    background=t
fi

existing=""
if [ "$1" = "-ex" ]; then
    shift
    existing=t
fi

if [ -z "$DISPLAY" ]; then
    # new frame in terminal
    exec emacsclient -s $EMACS_SERVER_NAME -t -c "$@"
elif [ "$existing" ]; then
    # existing frame in background
    exec emacsclient -s $EMACS_SERVER_NAME -n "$@"
elif [ "$background" ]; then
    # new frame in background
    exec emacsclient -s $EMACS_SERVER_NAME -c "$@" >/dev/null &
else
    # default: new frame
    exec emacsclient -s $EMACS_SERVER_NAME -c "$@"
fi
